DBCC FREEPROCCACHE

--Plan Reusability of a Prepared Workload (Storage Procedure)

exec spBasicSalesInfo 763,3  

SELECT  
	b.creation_time,b.last_execution_time,
	Minutos_em_Cache= Convert(VarChar(20), 
	DATEDIFF(MI, b.creation_time, getdate())) + ' Minutos',
	Resultado_em_Horas = Convert(VarChar(10), DATEDIFF(MI, 
	b.creation_time, getdate()) / 60) + ':' + Right(Replicate('0', 2) + Convert(VarChar(10), 
	DATEDIFF(MI, b.creation_time, getdate()) % 60), 2),a.usecounts,a.size_in_bytes,a.cacheobjtype,
	a.objtype,t.text FROM sys.dm_exec_cached_plans a cross apply sys.dm_exec_sql_text(a.plan_handle) t, 
	sys.dm_exec_query_stats b 
WHERE 	a.plan_handle=b.plan_handle AND 
a.objtype ='Proc' --There are other options in this filter, such as 'ad hoc' adn so forth...

ORDER BY 1 

--Plan Reusability of a Prepared Workload (sp_executesql)

DECLARE
@CustomerId INT, 
@ProductID INT  

SET @ProductID=766
SET @CustomerId=5 -- If you switch this value, the optmizer will be generate another execution plan in the plan cache or procedure cache.

SELECT  soh.SalesOrderNumber  
       ,soh.OrderDate  
       ,sod.OrderQty  
       ,sod.LineTotal  
FROM    Sales.SalesOrderHeader AS soh  
        JOIN Sales.SalesOrderDetail AS sod  
        ON soh.SalesOrderID = sod.SalesOrderID  
WHERE   soh.CustomerID = @CustomerId  
        AND sod.Productid = @ProductId  
        

SELECT  
	b.creation_time,b.last_execution_time,
	Minutos_em_Cache= Convert(VarChar(20), 
	DATEDIFF(MI, b.creation_time, getdate())) + ' Minutos',
	Resultado_em_Horas = Convert(VarChar(10), DATEDIFF(MI, 
	b.creation_time, getdate()) / 60) + ':' + Right(Replicate('0', 2) + Convert(VarChar(10), 
	DATEDIFF(MI, b.creation_time, getdate()) % 60), 2),a.usecounts,a.size_in_bytes,a.cacheobjtype,
	a.objtype,t.text FROM sys.dm_exec_cached_plans a cross apply sys.dm_exec_sql_text(a.plan_handle) t, 
	sys.dm_exec_query_stats b 
WHERE 	a.plan_handle=b.plan_handle AND 
a.objtype ='Adhoc' --There are other options in this filter, such as 'ad hoc' adn so forth...

ORDER BY 1 

---

create view rafael
as
SELECT  soh.SalesOrderNumber  
       ,soh.OrderDate  
       ,sod.OrderQty  
       ,sod.LineTotal  
FROM    Sales.SalesOrderHeader AS soh  
        JOIN Sales.SalesOrderDetail AS sod  
        ON soh.SalesOrderID = sod.SalesOrderID  
WHERE   soh.CustomerID = 5
        AND sod.Productid = 766  


--Now I'm going to create a view and we'll see how the sql works.

DBCC FREEPROCCACHE

create view rafaelgomes
as
SELECT  soh.SalesOrderNumber  
       ,soh.OrderDate  
       ,sod.OrderQty  
       ,sod.LineTotal  
FROM    Sales.SalesOrderHeader AS soh  
        JOIN Sales.SalesOrderDetail AS sod  
        ON soh.SalesOrderID = sod.SalesOrderID  
WHERE   soh.CustomerID = 5
        AND sod.Productid = 766  

SELECT  
	b.creation_time,b.last_execution_time,
	Minutos_em_Cache= Convert(VarChar(20), 
	DATEDIFF(MI, b.creation_time, getdate())) + ' Minutos',
	Resultado_em_Horas = Convert(VarChar(10), DATEDIFF(MI, 
	b.creation_time, getdate()) / 60) + ':' + Right(Replicate('0', 2) + Convert(VarChar(10), 
	DATEDIFF(MI, b.creation_time, getdate()) % 60), 2),a.usecounts,a.size_in_bytes,a.cacheobjtype,
	a.objtype,t.text FROM sys.dm_exec_cached_plans a cross apply sys.dm_exec_sql_text(a.plan_handle) t, 
	sys.dm_exec_query_stats b 
WHERE 	a.plan_handle=b.plan_handle --AND 
--a.objtype ='Proc' --There are other options in this filter, such as 'ad hoc' adn so forth...

ORDER BY 1 

SELECT *FROM rafaelgomes

--SP_EXECUTESQL

DBCC FREEPROCCACHE

--Elapsed Time in the Plan Cache with its correspondent statements

SELECT  
	b.creation_time,b.last_execution_time,
	Minutos_em_Cache= Convert(VarChar(20), 
	DATEDIFF(MI, b.creation_time, getdate())) + ' Minutos',
	Resultado_em_Horas = Convert(VarChar(10), DATEDIFF(MI, 
	b.creation_time, getdate()) / 60) + ':' + Right(Replicate('0', 2) + Convert(VarChar(10), 
	DATEDIFF(MI, b.creation_time, getdate()) % 60), 2),a.usecounts,a.size_in_bytes,a.cacheobjtype,
	a.objtype,t.text FROM sys.dm_exec_cached_plans a,sys.dm_exec_query_stats b  cross apply sys.dm_exec_sql_text(b.sql_handle) t 
WHERE 	a.plan_handle=b.plan_handle 
--	AND a.objtype ='Prepared' --There are other options in this filter, such as 'ad hoc' adn so forth...
ORDER BY 1 


DECLARE @query	nvarchar(max)
DECLARE @param  nvarchar(max)

SET @query= N'select *from f1.Tbl_Piloto where CODIGO=@codigo'
SET @param=N'@codigo int'

exec sp_executesql @query,@param,@codigo=5











