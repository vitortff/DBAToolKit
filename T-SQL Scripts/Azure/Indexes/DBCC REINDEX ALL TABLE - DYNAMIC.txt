--WAITFOR DELAY '02:00'; 

DECLARE @TABLE_NAME NVARCHAR(200)
DECLARE @SQLString NVARCHAR(4000)

DECLARE @STATEMENT01 VARCHAR(4000) = 'DBCC DBREINDEX(' 
DECLARE @STATEMENT02 VARCHAR(4000) = ''''
DECLARE @STATEMENT03 VARCHAR(4000) = ''''
DECLARE @STATEMENT04 VARCHAR(4000) = ','
DECLARE @STATEMENT05 VARCHAR(4000) = ''''
DECLARE @STATEMENT06 VARCHAR(4000) = ''''
DECLARE @STATEMENT07 VARCHAR(4000) = ','
DECLARE @STATEMENT08 VARCHAR(4000) = '100'
DECLARE @STATEMENT09 VARCHAR(4000) = ');'


-- Cursor para percorrer os registros
DECLARE cursor1 CURSOR FOR

SELECT name FROM sys.objects WHERE [type] = 'u' and
name <> 'Gen_revisao' and
(name not like '%bkp%' or name not like '%backup%')
ORDER BY name

--Abrindo Cursor
OPEN cursor1
 
-- Lendo a próxima linha
FETCH NEXT FROM cursor1 INTO @TABLE_NAME
 
-- Percorrendo linhas do cursor (enquanto houverem)
--FETCHSTATUS
--Essa função retorna o status do último cursor 
--que a instrução FETCH emitiu em relação a qualquer cursor atualmente aberto pela conexão.


WHILE @@FETCH_STATUS = 0 --Enquato a instrução FETCH for bem-sucedida.

BEGIN
 
-- Executando as rotinas desejadas manipulando o registro
--1

SET @SQLString=  @STATEMENT01 + @STATEMENT02 + @TABLE_NAME + @STATEMENT03 + @STATEMENT04 + @STATEMENT05 + @STATEMENT06 + @STATEMENT07 + @STATEMENT08 + @STATEMENT09

EXECUTE sp_executesql @SQLString


-- Lendo a próxima linha
FETCH NEXT FROM cursor1 INTO @TABLE_NAME

END

-- Fechando Cursor para leitura
CLOSE cursor1
 
-- Finalizado o cursor
DEALLOCATE cursor1


DECLARE @DATABASE_NAME VARCHAR(50) = (SELECT DB_NAME())
SELECT @DATABASE_NAME
DBCC SHRINKDATABASE(@DATABASE_NAME) 
