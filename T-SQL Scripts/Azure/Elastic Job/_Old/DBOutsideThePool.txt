DECLARE @NAME NVARCHAR(50)
DECLARE @SQLString NVARCHAR(500)

DECLARE @freq INT =(SELECT COUNT(*) AS FREQ from sys.databases WHERE name not in (
SELECT d.name as database_name FROM sys.databases d inner join sys.database_service_objectives dso 
on d.database_id = dso.database_id
WHERE d.Name <> 'master' and dso.elastic_pool_name is not null) and
name <> 'master')

			
			SELECT name from sys.databases WHERE name not in (
			SELECT d.name as database_name       
			FROM
				   sys.databases d inner join sys.database_service_objectives dso on d.database_id = dso.database_id
			WHERE d.Name <> 'master' and dso.elastic_pool_name is not null) and
			name <> 'master'




	IF @freq > 0

		BEGIN
			-- Cursor para percorrer os registros
			DECLARE cursor1 CURSOR FOR

			SELECT name from sys.databases WHERE name not in (
			SELECT d.name as database_name       
			FROM
				   sys.databases d inner join sys.database_service_objectives dso on d.database_id = dso.database_id
			WHERE d.Name <> 'master' and dso.elastic_pool_name is not null) and
			name <> 'master'

			 --Abrindo Cursor
			OPEN cursor1
 
			-- Lendo a próxima linha
			FETCH NEXT FROM cursor1 INTO @NAME
 
			-- Percorrendo linhas do cursor (enquanto houverem)
			--FETCHSTATUS
			--Essa função retorna o status do último cursor 
			--que a instrução FETCH emitiu em relação a qualquer cursor atualmente aberto pela conexão.


			WHILE @@FETCH_STATUS = 0 --Enquato a instrução FETCH for bem-sucedida.

			BEGIN
 
			-- Executando as rotinas desejadas manipulando o registro

			--SET @SQLString= 'use '+ @name + '; CREATE USER [Nelson Junior Castro de Jesus] FOR LOGIN [x212561] WITH DEFAULT_SCHEMA=[dbo]'

			SET @SQLString= 'ALTER DATABASE [' + @NAME + '] MODIFY (SERVICE_OBJECTIVE = ELASTIC_POOL(name=[l1-firm-br-pool]))'


			EXECUTE sp_executesql @SQLString

			-- Lendo a próxima linha
			FETCH NEXT FROM cursor1 INTO @NAME
		END
 
-- Fechando Cursor para leitura
CLOSE cursor1
 
-- Finalizado o cursor
DEALLOCATE cursor1

	END

	Else
		print 'Nothing to do'